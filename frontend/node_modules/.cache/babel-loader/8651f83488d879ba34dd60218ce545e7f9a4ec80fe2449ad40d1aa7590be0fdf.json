{"ast":null,"code":"var _jsxFileName = \"/Users/aristarh/Documents/development/github/TicTacToe-rksi/frontend/frontend/src/services/MSAuth/components/screens/SearchOpponentScreen/SearchOpponentScreen.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchOpponentScreen = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      example: \"\",\n      exampleRequired: \"\"\n    }\n  });\n  console.log(watch(\"example\")); // you can watch individual input by pass the name of the input\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(data => {\n      alert(JSON.stringify(data));\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(\"exampleRequired\", {\n        required: true,\n        maxLength: 10\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n_s(SearchOpponentScreen, \"rg4YHSNUeDonQsWTQvXQzUTAV4s=\", false, function () {\n  return [useForm];\n});\n_c = SearchOpponentScreen;\nvar _c;\n$RefreshReg$(_c, \"SearchOpponentScreen\");","map":{"version":3,"names":["useForm","jsxDEV","_jsxDEV","SearchOpponentScreen","_s","register","handleSubmit","watch","formState","errors","defaultValues","example","exampleRequired","console","log","onSubmit","data","alert","JSON","stringify","children","required","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/aristarh/Documents/development/github/TicTacToe-rksi/frontend/frontend/src/services/MSAuth/components/screens/SearchOpponentScreen/SearchOpponentScreen.tsx"],"sourcesContent":["import styles from './SearchOpponentScreen.module.scss'\nimport {useForm} from \"react-hook-form\";\n\nexport const SearchOpponentScreen = () => {\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\twatch,\n\t\tformState: { errors }\n\t} = useForm({\n\t\tdefaultValues: {\n\t\t\texample: \"\",\n\t\t\texampleRequired: \"\"\n\t\t}\n\t});\n\n\tconsole.log(watch(\"example\")); // you can watch individual input by pass the name of the input\n\n\treturn (\n\t\t<form\n\t\t\tonSubmit={handleSubmit((data) => {\n\t\t\t\talert(JSON.stringify(data));\n\t\t\t})}\n\t\t>\n\t\t\t<input\n\t\t\t\t{...register(\"exampleRequired\", { required: true, maxLength: 10 })}\n\t\t\t/>\n\t\t\t{errors.exampleRequired && <p>This field is required</p>}\n\t\t\t<input type=\"submit\" />\n\t\t</form>\n\t);\n}\n"],"mappings":";;AACA,SAAQA,OAAO,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzC,MAAM;IACLC,QAAQ;IACRC,YAAY;IACZC,KAAK;IACLC,SAAS,EAAE;MAAEC;IAAO;EACrB,CAAC,GAAGT,OAAO,CAAC;IACXU,aAAa,EAAE;MACdC,OAAO,EAAE,EAAE;MACXC,eAAe,EAAE;IAClB;EACD,CAAC,CAAC;EAEFC,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE/B,oBACCL,OAAA;IACCa,QAAQ,EAAET,YAAY,CAAEU,IAAI,IAAK;MAChCC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAE;IAAAI,QAAA,gBAEHlB,OAAA;MAAA,GACKG,QAAQ,CAAC,iBAAiB,EAAE;QAAEgB,QAAQ,EAAE,IAAI;QAAEC,SAAS,EAAE;MAAG,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,EACDjB,MAAM,CAACG,eAAe,iBAAIV,OAAA;MAAAkB,QAAA,EAAG;IAAsB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACxDxB,OAAA;MAAOyB,IAAI,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAET,CAAC;AAAAtB,EAAA,CA5BYD,oBAAoB;EAAA,QAM5BH,OAAO;AAAA;AAAA4B,EAAA,GANCzB,oBAAoB;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}